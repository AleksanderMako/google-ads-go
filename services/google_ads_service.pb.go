// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/kritzware/google-ads-go/services/google_ads_service.proto

package services

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	field_mask "google.golang.org/genproto/protobuf/field_mask"
	common "github.com/kritzware/google-ads-go/common"
	enums "github.com/kritzware/google-ads-go/enums"
	resources "github.com/kritzware/google-ads-go/resources"
	math "math"
)

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Request message for [GoogleAdsService.Search][].
type SearchGoogleAdsRequest struct {
	// The ID of the customer being queried.
	CustomerId string `protobuf:"bytes,1,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	// The query string.
	Query string `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
	// Token of the page to retrieve. If not specified, the first
	// page of results will be returned. Use the value obtained from
	// `next_page_token` in the previous response in order to request
	// the next page of results.
	PageToken string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// Number of elements to retrieve in a single page.
	// When too large a page is requested, the server may decide to
	// further limit the number of returned resources.
	PageSize             int32    `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchGoogleAdsRequest) Reset()         { *m = SearchGoogleAdsRequest{} }
func (m *SearchGoogleAdsRequest) String() string { return proto.CompactTextString(m) }
func (*SearchGoogleAdsRequest) ProtoMessage()    {}
func (*SearchGoogleAdsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_faa7999714db141e, []int{0}
}
func (m *SearchGoogleAdsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchGoogleAdsRequest.Unmarshal(m, b)
}
func (m *SearchGoogleAdsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchGoogleAdsRequest.Marshal(b, m, deterministic)
}
func (m *SearchGoogleAdsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchGoogleAdsRequest.Merge(m, src)
}
func (m *SearchGoogleAdsRequest) XXX_Size() int {
	return xxx_messageInfo_SearchGoogleAdsRequest.Size(m)
}
func (m *SearchGoogleAdsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchGoogleAdsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchGoogleAdsRequest proto.InternalMessageInfo

func (m *SearchGoogleAdsRequest) GetCustomerId() string {
	if m != nil {
		return m.CustomerId
	}
	return ""
}

func (m *SearchGoogleAdsRequest) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

func (m *SearchGoogleAdsRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

func (m *SearchGoogleAdsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

// Response message for [GoogleAdsService.Search][].
type SearchGoogleAdsResponse struct {
	// The list of rows that matched the query.
	Results []*GoogleAdsRow `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	// Pagination token used to retrieve the next page of results.
	// Pass the content of this string as the `page_token` attribute of
	// the next request. `next_page_token` is not returned for the last
	// page.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	// Total number of results that match the query ignoring the LIMIT
	// clause.
	TotalResultsCount int64 `protobuf:"varint,3,opt,name=total_results_count,json=totalResultsCount,proto3" json:"total_results_count,omitempty"`
	// FieldMask that represents what fields were requested by the user.
	FieldMask            *field_mask.FieldMask `protobuf:"bytes,5,opt,name=field_mask,json=fieldMask,proto3" json:"field_mask,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *SearchGoogleAdsResponse) Reset()         { *m = SearchGoogleAdsResponse{} }
func (m *SearchGoogleAdsResponse) String() string { return proto.CompactTextString(m) }
func (*SearchGoogleAdsResponse) ProtoMessage()    {}
func (*SearchGoogleAdsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_faa7999714db141e, []int{1}
}
func (m *SearchGoogleAdsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchGoogleAdsResponse.Unmarshal(m, b)
}
func (m *SearchGoogleAdsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchGoogleAdsResponse.Marshal(b, m, deterministic)
}
func (m *SearchGoogleAdsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchGoogleAdsResponse.Merge(m, src)
}
func (m *SearchGoogleAdsResponse) XXX_Size() int {
	return xxx_messageInfo_SearchGoogleAdsResponse.Size(m)
}
func (m *SearchGoogleAdsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchGoogleAdsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchGoogleAdsResponse proto.InternalMessageInfo

func (m *SearchGoogleAdsResponse) GetResults() []*GoogleAdsRow {
	if m != nil {
		return m.Results
	}
	return nil
}

func (m *SearchGoogleAdsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

func (m *SearchGoogleAdsResponse) GetTotalResultsCount() int64 {
	if m != nil {
		return m.TotalResultsCount
	}
	return 0
}

func (m *SearchGoogleAdsResponse) GetFieldMask() *field_mask.FieldMask {
	if m != nil {
		return m.FieldMask
	}
	return nil
}

// A returned row from the query.
type GoogleAdsRow struct {
	// The ad group referenced in the query.
	AdGroup *resources.AdGroup `protobuf:"bytes,3,opt,name=ad_group,json=adGroup,proto3" json:"ad_group,omitempty"`
	// The ad referenced in the query.
	AdGroupAd *resources.AdGroupAd `protobuf:"bytes,16,opt,name=ad_group_ad,json=adGroupAd,proto3" json:"ad_group_ad,omitempty"`
	// The bid modifier referenced in the query.
	AdGroupBidModifier *resources.AdGroupBidModifier `protobuf:"bytes,24,opt,name=ad_group_bid_modifier,json=adGroupBidModifier,proto3" json:"ad_group_bid_modifier,omitempty"`
	// The criterion referenced in the query.
	AdGroupCriterion *resources.AdGroupCriterion `protobuf:"bytes,17,opt,name=ad_group_criterion,json=adGroupCriterion,proto3" json:"ad_group_criterion,omitempty"`
	// The bidding strategy referenced in the query.
	BiddingStrategy *resources.BiddingStrategy `protobuf:"bytes,18,opt,name=bidding_strategy,json=biddingStrategy,proto3" json:"bidding_strategy,omitempty"`
	// The campaign budget referenced in the query.
	CampaignBudget *resources.CampaignBudget `protobuf:"bytes,19,opt,name=campaign_budget,json=campaignBudget,proto3" json:"campaign_budget,omitempty"`
	// The campaign referenced in the query.
	Campaign *resources.Campaign `protobuf:"bytes,2,opt,name=campaign,proto3" json:"campaign,omitempty"`
	// The campaign criterion referenced in the query.
	CampaignCriterion *resources.CampaignCriterion `protobuf:"bytes,20,opt,name=campaign_criterion,json=campaignCriterion,proto3" json:"campaign_criterion,omitempty"`
	// The customer referenced in the query.
	Customer *resources.Customer `protobuf:"bytes,1,opt,name=customer,proto3" json:"customer,omitempty"`
	// The geo target constant referenced in the query.
	GeoTargetConstant *resources.GeoTargetConstant `protobuf:"bytes,23,opt,name=geo_target_constant,json=geoTargetConstant,proto3" json:"geo_target_constant,omitempty"`
	// The keyword view referenced in the query.
	KeywordView *resources.KeywordView `protobuf:"bytes,21,opt,name=keyword_view,json=keywordView,proto3" json:"keyword_view,omitempty"`
	// The recommendation referenced in the query.
	Recommendation *resources.Recommendation `protobuf:"bytes,22,opt,name=recommendation,proto3" json:"recommendation,omitempty"`
	// The metrics.
	Metrics *common.Metrics `protobuf:"bytes,4,opt,name=metrics,proto3" json:"metrics,omitempty"`
	// Ad network type.
	AdNetworkType enums.AdNetworkTypeEnum_AdNetworkType `protobuf:"varint,5,opt,name=ad_network_type,json=adNetworkType,proto3,enum=google.ads.googleads.v0.enums.AdNetworkTypeEnum_AdNetworkType" json:"ad_network_type,omitempty"`
	// Date to which metrics apply.
	// YYYY-MM-DD format, e.g., 2018-04-17.
	Date *wrappers.StringValue `protobuf:"bytes,6,opt,name=date,proto3" json:"date,omitempty"`
	// Day of the week, e.g., MONDAY.
	DayOfWeek enums.DayOfWeekEnum_DayOfWeek `protobuf:"varint,7,opt,name=day_of_week,json=dayOfWeek,proto3,enum=google.ads.googleads.v0.enums.DayOfWeekEnum_DayOfWeek" json:"day_of_week,omitempty"`
	// Platform to which metrics apply.
	Device enums.DeviceEnum_Device `protobuf:"varint,8,opt,name=device,proto3,enum=google.ads.googleads.v0.enums.DeviceEnum_Device" json:"device,omitempty"`
	// Hour of day as a number between 0 and 23, inclusive.
	Hour *wrappers.Int32Value `protobuf:"bytes,9,opt,name=hour,proto3" json:"hour,omitempty"`
	// Month as represented by the date of the first day of a month.
	Month *wrappers.StringValue `protobuf:"bytes,10,opt,name=month,proto3" json:"month,omitempty"`
	// Quarter as represented by the date of the first day of a quarter.
	// Uses the calendar year for quarters,
	// e.g., the second quarter of 2018 starts on 2018-04-01.
	Quarter *wrappers.StringValue `protobuf:"bytes,12,opt,name=quarter,proto3" json:"quarter,omitempty"`
	// Position of the ad.
	Slot enums.SlotEnum_Slot `protobuf:"varint,13,opt,name=slot,proto3,enum=google.ads.googleads.v0.enums.SlotEnum_Slot" json:"slot,omitempty"`
	// Week as defined as Monday through Sunday, and represented by the date of
	// Monday.
	Week *wrappers.StringValue `protobuf:"bytes,14,opt,name=week,proto3" json:"week,omitempty"`
	// Year, formatted as yyyy.
	Year                 *wrappers.Int32Value `protobuf:"bytes,15,opt,name=year,proto3" json:"year,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *GoogleAdsRow) Reset()         { *m = GoogleAdsRow{} }
func (m *GoogleAdsRow) String() string { return proto.CompactTextString(m) }
func (*GoogleAdsRow) ProtoMessage()    {}
func (*GoogleAdsRow) Descriptor() ([]byte, []int) {
	return fileDescriptor_faa7999714db141e, []int{2}
}
func (m *GoogleAdsRow) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GoogleAdsRow.Unmarshal(m, b)
}
func (m *GoogleAdsRow) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GoogleAdsRow.Marshal(b, m, deterministic)
}
func (m *GoogleAdsRow) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GoogleAdsRow.Merge(m, src)
}
func (m *GoogleAdsRow) XXX_Size() int {
	return xxx_messageInfo_GoogleAdsRow.Size(m)
}
func (m *GoogleAdsRow) XXX_DiscardUnknown() {
	xxx_messageInfo_GoogleAdsRow.DiscardUnknown(m)
}

var xxx_messageInfo_GoogleAdsRow proto.InternalMessageInfo

func (m *GoogleAdsRow) GetAdGroup() *resources.AdGroup {
	if m != nil {
		return m.AdGroup
	}
	return nil
}

func (m *GoogleAdsRow) GetAdGroupAd() *resources.AdGroupAd {
	if m != nil {
		return m.AdGroupAd
	}
	return nil
}

func (m *GoogleAdsRow) GetAdGroupBidModifier() *resources.AdGroupBidModifier {
	if m != nil {
		return m.AdGroupBidModifier
	}
	return nil
}

func (m *GoogleAdsRow) GetAdGroupCriterion() *resources.AdGroupCriterion {
	if m != nil {
		return m.AdGroupCriterion
	}
	return nil
}

func (m *GoogleAdsRow) GetBiddingStrategy() *resources.BiddingStrategy {
	if m != nil {
		return m.BiddingStrategy
	}
	return nil
}

func (m *GoogleAdsRow) GetCampaignBudget() *resources.CampaignBudget {
	if m != nil {
		return m.CampaignBudget
	}
	return nil
}

func (m *GoogleAdsRow) GetCampaign() *resources.Campaign {
	if m != nil {
		return m.Campaign
	}
	return nil
}

func (m *GoogleAdsRow) GetCampaignCriterion() *resources.CampaignCriterion {
	if m != nil {
		return m.CampaignCriterion
	}
	return nil
}

func (m *GoogleAdsRow) GetCustomer() *resources.Customer {
	if m != nil {
		return m.Customer
	}
	return nil
}

func (m *GoogleAdsRow) GetGeoTargetConstant() *resources.GeoTargetConstant {
	if m != nil {
		return m.GeoTargetConstant
	}
	return nil
}

func (m *GoogleAdsRow) GetKeywordView() *resources.KeywordView {
	if m != nil {
		return m.KeywordView
	}
	return nil
}

func (m *GoogleAdsRow) GetRecommendation() *resources.Recommendation {
	if m != nil {
		return m.Recommendation
	}
	return nil
}

func (m *GoogleAdsRow) GetMetrics() *common.Metrics {
	if m != nil {
		return m.Metrics
	}
	return nil
}

func (m *GoogleAdsRow) GetAdNetworkType() enums.AdNetworkTypeEnum_AdNetworkType {
	if m != nil {
		return m.AdNetworkType
	}
	return enums.AdNetworkTypeEnum_UNSPECIFIED
}

func (m *GoogleAdsRow) GetDate() *wrappers.StringValue {
	if m != nil {
		return m.Date
	}
	return nil
}

func (m *GoogleAdsRow) GetDayOfWeek() enums.DayOfWeekEnum_DayOfWeek {
	if m != nil {
		return m.DayOfWeek
	}
	return enums.DayOfWeekEnum_UNSPECIFIED
}

func (m *GoogleAdsRow) GetDevice() enums.DeviceEnum_Device {
	if m != nil {
		return m.Device
	}
	return enums.DeviceEnum_UNSPECIFIED
}

func (m *GoogleAdsRow) GetHour() *wrappers.Int32Value {
	if m != nil {
		return m.Hour
	}
	return nil
}

func (m *GoogleAdsRow) GetMonth() *wrappers.StringValue {
	if m != nil {
		return m.Month
	}
	return nil
}

func (m *GoogleAdsRow) GetQuarter() *wrappers.StringValue {
	if m != nil {
		return m.Quarter
	}
	return nil
}

func (m *GoogleAdsRow) GetSlot() enums.SlotEnum_Slot {
	if m != nil {
		return m.Slot
	}
	return enums.SlotEnum_UNSPECIFIED
}

func (m *GoogleAdsRow) GetWeek() *wrappers.StringValue {
	if m != nil {
		return m.Week
	}
	return nil
}

func (m *GoogleAdsRow) GetYear() *wrappers.Int32Value {
	if m != nil {
		return m.Year
	}
	return nil
}

func init() {
	proto.RegisterType((*SearchGoogleAdsRequest)(nil), "google.ads.googleads.v0.services.SearchGoogleAdsRequest")
	proto.RegisterType((*SearchGoogleAdsResponse)(nil), "google.ads.googleads.v0.services.SearchGoogleAdsResponse")
	proto.RegisterType((*GoogleAdsRow)(nil), "google.ads.googleads.v0.services.GoogleAdsRow")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GoogleAdsServiceClient is the client API for GoogleAdsService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GoogleAdsServiceClient interface {
	// Returns all rows that match the search query.
	Search(ctx context.Context, in *SearchGoogleAdsRequest, opts ...grpc.CallOption) (*SearchGoogleAdsResponse, error)
}

type googleAdsServiceClient struct {
	cc *grpc.ClientConn
}

func NewGoogleAdsServiceClient(cc *grpc.ClientConn) GoogleAdsServiceClient {
	return &googleAdsServiceClient{cc}
}

func (c *googleAdsServiceClient) Search(ctx context.Context, in *SearchGoogleAdsRequest, opts ...grpc.CallOption) (*SearchGoogleAdsResponse, error) {
	out := new(SearchGoogleAdsResponse)
	err := c.cc.Invoke(ctx, "/google.ads.googleads.v0.services.GoogleAdsService/Search", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GoogleAdsServiceServer is the server API for GoogleAdsService service.
type GoogleAdsServiceServer interface {
	// Returns all rows that match the search query.
	Search(context.Context, *SearchGoogleAdsRequest) (*SearchGoogleAdsResponse, error)
}

func RegisterGoogleAdsServiceServer(s *grpc.Server, srv GoogleAdsServiceServer) {
	s.RegisterService(&_GoogleAdsService_serviceDesc, srv)
}

func _GoogleAdsService_Search_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchGoogleAdsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoogleAdsServiceServer).Search(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.ads.googleads.v0.services.GoogleAdsService/Search",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoogleAdsServiceServer).Search(ctx, req.(*SearchGoogleAdsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _GoogleAdsService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "google.ads.googleads.v0.services.GoogleAdsService",
	HandlerType: (*GoogleAdsServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Search",
			Handler:    _GoogleAdsService_Search_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/kritzware/google-ads-go/services/google_ads_service.proto",
}

func init() {
	proto.RegisterFile("github.com/kritzware/google-ads-go/services/google_ads_service.proto", fileDescriptor_faa7999714db141e)
}

var fileDescriptor_faa7999714db141e = []byte{
	// 1170 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x97, 0xdf, 0x6e, 0x23, 0xb5,
	0x17, 0xc7, 0x35, 0xfd, 0x1f, 0xa7, 0x7f, 0xdd, 0xed, 0xae, 0x95, 0xdd, 0xdf, 0x8f, 0xa8, 0x42,
	0x50, 0x95, 0x6a, 0x12, 0xd2, 0xa5, 0x6c, 0x8b, 0x16, 0x91, 0x96, 0xa5, 0xbb, 0x82, 0x42, 0x71,
	0xaa, 0x22, 0x50, 0xd1, 0xc8, 0x19, 0x3b, 0xd3, 0x51, 0x92, 0x71, 0x6a, 0x7b, 0x1a, 0xb2, 0x88,
	0x1b, 0x6e, 0xb9, 0xe4, 0x0d, 0xb8, 0xe4, 0x82, 0x6b, 0x9e, 0x01, 0x89, 0x2b, 0xde, 0x00, 0xf1,
	0x0c, 0x70, 0x8b, 0xc6, 0xe3, 0x49, 0xd2, 0xa4, 0xd9, 0x99, 0x72, 0x67, 0x1f, 0x9f, 0xcf, 0xd7,
	0xe7, 0x9c, 0xc9, 0x9c, 0x39, 0x01, 0xfb, 0x1e, 0xe7, 0x5e, 0x8b, 0x95, 0x08, 0x95, 0xa5, 0x78,
	0x19, 0xad, 0xae, 0xcb, 0x25, 0xc9, 0xc4, 0xb5, 0xef, 0xb2, 0xc4, 0xea, 0x10, 0x2a, 0x1d, 0x63,
	0xb3, 0x3b, 0x82, 0x2b, 0x0e, 0x8b, 0xf1, 0x89, 0x4d, 0xa8, 0xb4, 0xfb, 0xa8, 0x7d, 0x5d, 0xb6,
	0x13, 0xb4, 0xb0, 0x33, 0x49, 0xdc, 0xe5, 0xed, 0x36, 0x0f, 0x4a, 0x6d, 0xa6, 0x84, 0xef, 0xca,
	0x58, 0xaf, 0xb0, 0x3b, 0xc9, 0x9b, 0x05, 0x61, 0x5b, 0x96, 0x08, 0x75, 0x02, 0xa6, 0xba, 0x5c,
	0x34, 0x1d, 0xd5, 0xeb, 0x98, 0x20, 0x0a, 0xa5, 0x57, 0x43, 0x94, 0xf4, 0x1c, 0xde, 0x70, 0xba,
	0x8c, 0x35, 0x0d, 0xb0, 0x9d, 0x02, 0xb0, 0x41, 0x86, 0x85, 0xad, 0x57, 0xfb, 0xca, 0x16, 0x57,
	0xc6, 0xb3, 0x3c, 0xc9, 0x53, 0x30, 0xc9, 0x43, 0x11, 0xd5, 0x91, 0x50, 0xc7, 0x13, 0x3c, 0xec,
	0xa4, 0x65, 0x3b, 0x4e, 0x38, 0x84, 0x1a, 0xe8, 0xe9, 0x1d, 0xa0, 0xba, 0x4f, 0x9d, 0x36, 0xa7,
	0x7e, 0xc3, 0x67, 0xc2, 0xe0, 0x07, 0x77, 0xc0, 0x5d, 0xe1, 0x2b, 0x26, 0x7c, 0x1e, 0x18, 0xf6,
	0x49, 0x3a, 0x5b, 0xf7, 0x29, 0xf5, 0x03, 0xcf, 0x91, 0x4a, 0x10, 0xc5, 0xbc, 0x5e, 0xf6, 0xda,
	0xb8, 0xa4, 0xdd, 0x21, 0xbe, 0x97, 0xdc, 0xf5, 0x6e, 0x76, 0xc2, 0xa9, 0x87, 0xd4, 0x63, 0x2a,
	0x7b, 0x82, 0x7d, 0x70, 0x34, 0xc1, 0x2c, 0x61, 0x86, 0x52, 0xf1, 0x76, 0xbf, 0x9c, 0xef, 0xa5,
	0x13, 0x1e, 0xe3, 0x8e, 0x22, 0xc2, 0x63, 0xca, 0x71, 0x79, 0x20, 0x15, 0x09, 0x92, 0x50, 0x1f,
	0xa7, 0xc3, 0x4d, 0xd6, 0xeb, 0x72, 0x41, 0x9d, 0x6b, 0x9f, 0x75, 0x0d, 0xb5, 0x97, 0x4e, 0x09,
	0x16, 0xbd, 0x5d, 0x2c, 0xa0, 0x44, 0x0d, 0x92, 0x7b, 0x94, 0x70, 0x1d, 0xbf, 0x44, 0x82, 0x80,
	0x2b, 0x7d, 0x98, 0xbc, 0x79, 0xe6, 0x4d, 0x2e, 0xe9, 0x5d, 0x3d, 0x6c, 0x94, 0x1a, 0x3e, 0x6b,
	0x51, 0xa7, 0x4d, 0x64, 0xf2, 0xd6, 0xfc, 0x7f, 0xd4, 0xa3, 0x2b, 0x48, 0xa7, 0xc3, 0x84, 0x51,
	0xd8, 0xfc, 0xc1, 0x02, 0xf7, 0x6b, 0x8c, 0x08, 0xf7, 0xf2, 0x58, 0x3b, 0x56, 0xa9, 0xc4, 0xec,
	0x2a, 0x64, 0x52, 0xc1, 0xd7, 0x40, 0x3e, 0xa9, 0x9b, 0xe3, 0x53, 0x64, 0x15, 0xad, 0xad, 0x1c,
	0x06, 0x89, 0xe9, 0x05, 0x85, 0xf7, 0xc0, 0xec, 0x55, 0xc8, 0x44, 0x0f, 0x4d, 0xe9, 0xa3, 0x78,
	0x03, 0xff, 0x07, 0x40, 0x87, 0x78, 0xcc, 0x51, 0xbc, 0xc9, 0x02, 0x34, 0xad, 0x8f, 0x72, 0x91,
	0xe5, 0x2c, 0x32, 0xc0, 0x87, 0x40, 0x6f, 0x1c, 0xe9, 0xbf, 0x64, 0x68, 0xa6, 0x68, 0x6d, 0xcd,
	0xe2, 0x85, 0xc8, 0x50, 0xf3, 0x5f, 0xb2, 0xcd, 0xbf, 0x2d, 0xf0, 0x60, 0x2c, 0x1a, 0xd9, 0xe1,
	0x81, 0x64, 0xf0, 0x39, 0x98, 0x17, 0x4c, 0x86, 0x2d, 0x25, 0x91, 0x55, 0x9c, 0xde, 0xca, 0x57,
	0x6c, 0x3b, 0xad, 0x8f, 0xd9, 0x03, 0x15, 0xde, 0xc5, 0x09, 0x0e, 0xdf, 0x00, 0x2b, 0x01, 0xfb,
	0x46, 0x39, 0x43, 0x61, 0xc6, 0x19, 0x2c, 0x45, 0xe6, 0xd3, 0x7e, 0xa8, 0x36, 0x58, 0x57, 0x5c,
	0x91, 0x96, 0x63, 0x40, 0xc7, 0xe5, 0x61, 0xa0, 0x74, 0x4a, 0xd3, 0x78, 0x4d, 0x1f, 0xe1, 0xf8,
	0xe4, 0x28, 0x3a, 0x80, 0xfb, 0x00, 0x0c, 0xea, 0x8f, 0x66, 0x8b, 0xd6, 0x56, 0xbe, 0x52, 0x48,
	0x82, 0x4c, 0x1e, 0x80, 0xfd, 0x51, 0xe4, 0x72, 0x42, 0x64, 0x13, 0xe7, 0x1a, 0xc9, 0x72, 0xf3,
	0x9f, 0x25, 0xb0, 0x38, 0x1c, 0x2c, 0x7c, 0x06, 0x16, 0x92, 0x37, 0x5a, 0x5f, 0x98, 0xaf, 0x6c,
	0x4f, 0x4c, 0xb7, 0xff, 0x13, 0xb2, 0xab, 0xf4, 0x38, 0x22, 0xf0, 0x3c, 0x89, 0x17, 0xf0, 0x13,
	0x90, 0x1f, 0x6a, 0x46, 0x68, 0x55, 0x2b, 0xed, 0x64, 0x57, 0xaa, 0x52, 0x9c, 0x23, 0xc9, 0x12,
	0x5e, 0x82, 0x8d, 0x5b, 0xbb, 0x14, 0x42, 0x5a, 0xf7, 0x9d, 0xec, 0xba, 0x87, 0x3e, 0x3d, 0x31,
	0x30, 0x86, 0x64, 0xcc, 0x06, 0x09, 0x80, 0xe3, 0x0d, 0x0d, 0xad, 0xe9, 0x6b, 0x76, 0xb3, 0x5f,
	0x73, 0x94, 0xa0, 0x78, 0x95, 0x8c, 0x58, 0xe0, 0xd7, 0x60, 0x75, 0xb4, 0xef, 0x21, 0xa8, 0x2f,
	0xa8, 0x64, 0xb8, 0xe0, 0x30, 0x46, 0x6b, 0x86, 0xc4, 0x2b, 0xf5, 0x9b, 0x06, 0xf8, 0x15, 0x58,
	0x19, 0x69, 0x75, 0x68, 0x5d, 0xab, 0xbf, 0x9d, 0x41, 0xfd, 0xc8, 0x90, 0x87, 0x1a, 0xc4, 0xcb,
	0xee, 0x8d, 0x3d, 0x3c, 0x06, 0x0b, 0x89, 0x45, 0xff, 0x72, 0xf3, 0x95, 0xb7, 0xee, 0x20, 0x8a,
	0xfb, 0x30, 0x74, 0x01, 0x1c, 0x6f, 0xab, 0xe8, 0x9e, 0x96, 0x7c, 0x7c, 0x07, 0xc9, 0x41, 0x9d,
	0xd7, 0xdc, 0x51, 0x93, 0x8e, 0xd6, 0x34, 0x0d, 0xdd, 0x44, 0x32, 0x46, 0x6b, 0x10, 0xdc, 0x87,
	0x21, 0x05, 0xeb, 0xb7, 0xb4, 0x65, 0xf4, 0x20, 0x73, 0xb8, 0xc7, 0x8c, 0x9f, 0x69, 0xf8, 0xc8,
	0xb0, 0x78, 0xcd, 0x1b, 0x35, 0xc1, 0xcf, 0xc1, 0xe2, 0x70, 0xff, 0x46, 0x1b, 0x5a, 0xde, 0xce,
	0x20, 0xff, 0x71, 0x8c, 0x9d, 0xfb, 0xac, 0x8b, 0xf3, 0xcd, 0xc1, 0x06, 0x7e, 0x09, 0x96, 0x6f,
	0x36, 0x77, 0x74, 0x3f, 0xf3, 0x4f, 0x01, 0xdf, 0x00, 0xf1, 0x88, 0x10, 0xac, 0x82, 0x79, 0x33,
	0x8c, 0xe9, 0x66, 0x9a, 0xaf, 0xbc, 0x39, 0x51, 0x33, 0x9e, 0xdd, 0xec, 0x93, 0xd8, 0x1d, 0x27,
	0x1c, 0x6c, 0x80, 0x95, 0x91, 0x11, 0x4d, 0xf7, 0xae, 0xe5, 0xca, 0xfb, 0x13, 0xa5, 0xf4, 0x18,
	0x65, 0x57, 0xe9, 0xa7, 0x31, 0x74, 0xd6, 0xeb, 0xb0, 0x67, 0x41, 0xd8, 0xbe, 0x69, 0xc1, 0x4b,
	0x64, 0x78, 0x0b, 0xcb, 0x60, 0x86, 0x12, 0xc5, 0xd0, 0x9c, 0x8e, 0xf3, 0xd1, 0x58, 0x63, 0xac,
	0x29, 0xe1, 0x07, 0xde, 0x39, 0x69, 0x85, 0x0c, 0x6b, 0x4f, 0x78, 0x0e, 0xf2, 0x43, 0x73, 0x20,
	0x9a, 0xd7, 0x51, 0xed, 0xa5, 0x44, 0xf5, 0x21, 0xe9, 0x7d, 0xd6, 0xf8, 0x82, 0xb1, 0xa6, 0x8e,
	0xa8, 0xbf, 0xc3, 0x39, 0x9a, 0x2c, 0xe1, 0x73, 0x30, 0x17, 0x8f, 0x8b, 0x68, 0x41, 0x4b, 0x96,
	0xd3, 0x24, 0xb5, 0x73, 0xac, 0xa7, 0x97, 0xd8, 0xf0, 0xb0, 0x04, 0x66, 0x2e, 0x79, 0x28, 0x50,
	0x4e, 0xe7, 0xf4, 0x70, 0x2c, 0xa7, 0x17, 0x81, 0xda, 0xad, 0x98, 0x94, 0x22, 0x47, 0x58, 0x01,
	0xb3, 0x6d, 0x1e, 0xa8, 0x4b, 0x04, 0x32, 0x54, 0x21, 0x76, 0x85, 0x7b, 0x60, 0xfe, 0x2a, 0x24,
	0x42, 0x31, 0x81, 0x16, 0x33, 0x50, 0x89, 0x33, 0xfc, 0x00, 0xcc, 0x44, 0x93, 0x2e, 0x5a, 0xd2,
	0x49, 0xee, 0xa4, 0x24, 0x59, 0x6b, 0x71, 0xa5, 0x53, 0x8c, 0x16, 0x58, 0x93, 0xd1, 0x23, 0xd3,
	0x95, 0x5f, 0xce, 0xf2, 0xc8, 0x22, 0xcf, 0xa8, 0x20, 0x3d, 0x46, 0x04, 0x5a, 0xc9, 0x50, 0x90,
	0xc8, 0xb1, 0xf2, 0xbb, 0x05, 0x56, 0xfb, 0x5f, 0xbe, 0x5a, 0xfc, 0xe1, 0x86, 0xbf, 0x5a, 0x60,
	0x2e, 0x9e, 0x03, 0xe0, 0x93, 0xf4, 0xaf, 0xfc, 0xed, 0xf3, 0x4b, 0x61, 0xff, 0x3f, 0x90, 0xf1,
	0xac, 0xb1, 0xb9, 0xff, 0xfd, 0x1f, 0x7f, 0xfd, 0x38, 0xb5, 0xbb, 0x69, 0xeb, 0xff, 0x3c, 0xa6,
	0xff, 0xc8, 0xd2, 0xb7, 0x43, 0xf3, 0xd0, 0xd3, 0xed, 0xef, 0xcc, 0x20, 0x57, 0xa5, 0xf2, 0x40,
	0x6a, 0xa1, 0x03, 0x6b, 0xfb, 0xf0, 0x17, 0x0b, 0xbc, 0xee, 0xf2, 0x76, 0xea, 0xdd, 0x87, 0x1b,
	0xa3, 0x59, 0x9f, 0x46, 0x35, 0x3a, 0xb5, 0x7e, 0x9a, 0x9a, 0x3e, 0xae, 0x56, 0x7f, 0x9e, 0x2a,
	0xc6, 0xe7, 0x76, 0x95, 0x0e, 0xcd, 0x31, 0xf6, 0x79, 0xd9, 0x36, 0xee, 0xf2, 0xb7, 0xc4, 0xe5,
	0xa2, 0x4a, 0xe5, 0x45, 0xdf, 0xe5, 0xe2, 0xbc, 0x7c, 0x91, 0xb8, 0xfc, 0x99, 0xee, 0x52, 0x9f,
	0xd3, 0xcf, 0x66, 0xf7, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x7f, 0x5c, 0x01, 0x51, 0x0e,
	0x00, 0x00,
}
