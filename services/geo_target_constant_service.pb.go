// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/kritzware/google-ads-go/services/geo_target_constant_service.proto

package services

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	resources "github.com/kritzware/google-ads-go/resources"
	math "math"
)

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Request message for [GeoTargetConstantService.GetGeoTargetConstant][].
type GetGeoTargetConstantRequest struct {
	// The resource name of the geo target constant to fetch.
	ResourceName         string   `protobuf:"bytes,1,opt,name=resource_name,json=resourceName,proto3" json:"resource_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetGeoTargetConstantRequest) Reset()         { *m = GetGeoTargetConstantRequest{} }
func (m *GetGeoTargetConstantRequest) String() string { return proto.CompactTextString(m) }
func (*GetGeoTargetConstantRequest) ProtoMessage()    {}
func (*GetGeoTargetConstantRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_23d864cb9b62df7f, []int{0}
}
func (m *GetGeoTargetConstantRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetGeoTargetConstantRequest.Unmarshal(m, b)
}
func (m *GetGeoTargetConstantRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetGeoTargetConstantRequest.Marshal(b, m, deterministic)
}
func (m *GetGeoTargetConstantRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetGeoTargetConstantRequest.Merge(m, src)
}
func (m *GetGeoTargetConstantRequest) XXX_Size() int {
	return xxx_messageInfo_GetGeoTargetConstantRequest.Size(m)
}
func (m *GetGeoTargetConstantRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetGeoTargetConstantRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetGeoTargetConstantRequest proto.InternalMessageInfo

func (m *GetGeoTargetConstantRequest) GetResourceName() string {
	if m != nil {
		return m.ResourceName
	}
	return ""
}

func init() {
	proto.RegisterType((*GetGeoTargetConstantRequest)(nil), "google.ads.googleads.v0.services.GetGeoTargetConstantRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GeoTargetConstantServiceClient is the client API for GeoTargetConstantService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GeoTargetConstantServiceClient interface {
	// Returns the requested geo target constant in full detail.
	GetGeoTargetConstant(ctx context.Context, in *GetGeoTargetConstantRequest, opts ...grpc.CallOption) (*resources.GeoTargetConstant, error)
}

type geoTargetConstantServiceClient struct {
	cc *grpc.ClientConn
}

func NewGeoTargetConstantServiceClient(cc *grpc.ClientConn) GeoTargetConstantServiceClient {
	return &geoTargetConstantServiceClient{cc}
}

func (c *geoTargetConstantServiceClient) GetGeoTargetConstant(ctx context.Context, in *GetGeoTargetConstantRequest, opts ...grpc.CallOption) (*resources.GeoTargetConstant, error) {
	out := new(resources.GeoTargetConstant)
	err := c.cc.Invoke(ctx, "/google.ads.googleads.v0.services.GeoTargetConstantService/GetGeoTargetConstant", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GeoTargetConstantServiceServer is the server API for GeoTargetConstantService service.
type GeoTargetConstantServiceServer interface {
	// Returns the requested geo target constant in full detail.
	GetGeoTargetConstant(context.Context, *GetGeoTargetConstantRequest) (*resources.GeoTargetConstant, error)
}

func RegisterGeoTargetConstantServiceServer(s *grpc.Server, srv GeoTargetConstantServiceServer) {
	s.RegisterService(&_GeoTargetConstantService_serviceDesc, srv)
}

func _GeoTargetConstantService_GetGeoTargetConstant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetGeoTargetConstantRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GeoTargetConstantServiceServer).GetGeoTargetConstant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.ads.googleads.v0.services.GeoTargetConstantService/GetGeoTargetConstant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GeoTargetConstantServiceServer).GetGeoTargetConstant(ctx, req.(*GetGeoTargetConstantRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _GeoTargetConstantService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "google.ads.googleads.v0.services.GeoTargetConstantService",
	HandlerType: (*GeoTargetConstantServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetGeoTargetConstant",
			Handler:    _GeoTargetConstantService_GetGeoTargetConstant_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/kritzware/google-ads-go/services/geo_target_constant_service.proto",
}

func init() {
	proto.RegisterFile("github.com/kritzware/google-ads-go/services/geo_target_constant_service.proto", fileDescriptor_23d864cb9b62df7f)
}

var fileDescriptor_23d864cb9b62df7f = []byte{
	// 313 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x72, 0x4a, 0xcf, 0xcf, 0x4f,
	0xcf, 0x49, 0xd5, 0x4f, 0x4c, 0x29, 0xd6, 0x87, 0x30, 0x41, 0xac, 0x32, 0x03, 0xfd, 0xe2, 0xd4,
	0xa2, 0xb2, 0xcc, 0xe4, 0xd4, 0x62, 0xfd, 0xf4, 0xd4, 0xfc, 0xf8, 0x92, 0xc4, 0xa2, 0xf4, 0xd4,
	0x92, 0xf8, 0xe4, 0xfc, 0xbc, 0xe2, 0x92, 0xc4, 0xbc, 0x92, 0x78, 0xa8, 0xa4, 0x5e, 0x41, 0x51,
	0x7e, 0x49, 0xbe, 0x90, 0x02, 0x44, 0xa3, 0x5e, 0x62, 0x4a, 0xb1, 0x1e, 0xdc, 0x0c, 0xbd, 0x32,
	0x03, 0x3d, 0x98, 0x19, 0x52, 0xd6, 0xb8, 0x6c, 0x29, 0x4a, 0x2d, 0xce, 0x2f, 0x2d, 0xc2, 0x61,
	0x0d, 0xc4, 0x78, 0x29, 0x19, 0x98, 0xe6, 0x82, 0x4c, 0xfd, 0xc4, 0xbc, 0xbc, 0xfc, 0x92, 0xc4,
	0x92, 0xcc, 0xfc, 0xbc, 0x62, 0x88, 0xac, 0x92, 0x13, 0x97, 0xb4, 0x7b, 0x6a, 0x89, 0x7b, 0x6a,
	0x7e, 0x08, 0x58, 0xb3, 0x33, 0x54, 0x6f, 0x50, 0x6a, 0x61, 0x69, 0x6a, 0x71, 0x89, 0x90, 0x32,
	0x17, 0x2f, 0xcc, 0x8e, 0xf8, 0xbc, 0xc4, 0xdc, 0x54, 0x09, 0x46, 0x05, 0x46, 0x0d, 0xce, 0x20,
	0x1e, 0x98, 0xa0, 0x5f, 0x62, 0x6e, 0xaa, 0xd1, 0x2d, 0x46, 0x2e, 0x09, 0x0c, 0x13, 0x82, 0x21,
	0x8e, 0x17, 0xda, 0xcb, 0xc8, 0x25, 0x82, 0xcd, 0x06, 0x21, 0x5b, 0x3d, 0x42, 0xfe, 0xd6, 0xc3,
	0xe3, 0x32, 0x29, 0x13, 0x9c, 0xda, 0xe1, 0x81, 0xa2, 0x87, 0xa1, 0x59, 0xc9, 0xa0, 0xe9, 0xf2,
	0x93, 0xc9, 0x4c, 0x5a, 0x42, 0x1a, 0xa0, 0xd0, 0xab, 0x46, 0xf1, 0x9a, 0x6d, 0x3a, 0xba, 0xea,
	0x62, 0x7d, 0xad, 0x5a, 0xa7, 0x6d, 0x8c, 0x5c, 0x2a, 0xc9, 0xf9, 0xb9, 0x04, 0x1d, 0xeb, 0x24,
	0x8b, 0x2b, 0x08, 0x02, 0x40, 0x01, 0x1d, 0xc0, 0xb8, 0x88, 0x89, 0xd9, 0xdd, 0xd1, 0x71, 0x15,
	0x93, 0x82, 0x3b, 0xc4, 0x24, 0xc7, 0x94, 0x62, 0x3d, 0x08, 0x13, 0xc4, 0x0a, 0x33, 0xd0, 0x83,
	0x2a, 0x2f, 0x3e, 0x05, 0x53, 0x12, 0xe3, 0x98, 0x52, 0x1c, 0x03, 0x57, 0x12, 0x13, 0x66, 0x10,
	0x03, 0x53, 0xf2, 0x88, 0xb0, 0x92, 0x24, 0x36, 0x70, 0x04, 0x1b, 0x03, 0x02, 0x00, 0x00, 0xff,
	0xff, 0x95, 0x8a, 0x27, 0x78, 0xa3, 0x02, 0x00, 0x00,
}
