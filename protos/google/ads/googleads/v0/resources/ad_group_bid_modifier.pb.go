// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/kritzware/google-ads-go/protos/google/ads/googleads/v0/resources/ad_group_bid_modifier.proto

package google_ads_googleads_v0_resources

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	common "github.com/kritzware/google-ads-go/protos/google/ads/googleads/v0/common"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Represents an ad group bid modifier.
type AdGroupBidModifier struct {
	// The resource name of the ad group bid modifier.
	// Ad group bid modifier resource names have the form:
	//
	// `customers/{customer_id}/adGroupBidModifiers/{ad_group_id}_{criterion_id}`
	ResourceName string `protobuf:"bytes,1,opt,name=resource_name,json=resourceName,proto3" json:"resource_name,omitempty"`
	// The ad group to which this criterion belongs.
	//
	// This field must not be used in WHERE clauses.
	AdGroup *wrappers.StringValue `protobuf:"bytes,2,opt,name=ad_group,json=adGroup,proto3" json:"ad_group,omitempty"`
	// The ID of the criterion to bid modify.
	//
	// This field is ignored for mutates.
	CriterionId *wrappers.Int64Value `protobuf:"bytes,3,opt,name=criterion_id,json=criterionId,proto3" json:"criterion_id,omitempty"`
	// The modifier for the bid when the criterion matches.
	BidModifier *wrappers.DoubleValue `protobuf:"bytes,4,opt,name=bid_modifier,json=bidModifier,proto3" json:"bid_modifier,omitempty"`
	// The criterion of this ad group bid modifier.
	//
	// Types that are valid to be assigned to Criterion:
	//	*AdGroupBidModifier_HotelDateSelectionType
	//	*AdGroupBidModifier_HotelAdvanceBookingWindow
	//	*AdGroupBidModifier_HotelLengthOfStay
	//	*AdGroupBidModifier_HotelCheckInDay
	Criterion            isAdGroupBidModifier_Criterion `protobuf_oneof:"criterion"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *AdGroupBidModifier) Reset()         { *m = AdGroupBidModifier{} }
func (m *AdGroupBidModifier) String() string { return proto.CompactTextString(m) }
func (*AdGroupBidModifier) ProtoMessage()    {}
func (*AdGroupBidModifier) Descriptor() ([]byte, []int) {
	return fileDescriptor_69f729284505e90f, []int{0}
}
func (m *AdGroupBidModifier) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AdGroupBidModifier.Unmarshal(m, b)
}
func (m *AdGroupBidModifier) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AdGroupBidModifier.Marshal(b, m, deterministic)
}
func (m *AdGroupBidModifier) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AdGroupBidModifier.Merge(m, src)
}
func (m *AdGroupBidModifier) XXX_Size() int {
	return xxx_messageInfo_AdGroupBidModifier.Size(m)
}
func (m *AdGroupBidModifier) XXX_DiscardUnknown() {
	xxx_messageInfo_AdGroupBidModifier.DiscardUnknown(m)
}

var xxx_messageInfo_AdGroupBidModifier proto.InternalMessageInfo

func (m *AdGroupBidModifier) GetResourceName() string {
	if m != nil {
		return m.ResourceName
	}
	return ""
}

func (m *AdGroupBidModifier) GetAdGroup() *wrappers.StringValue {
	if m != nil {
		return m.AdGroup
	}
	return nil
}

func (m *AdGroupBidModifier) GetCriterionId() *wrappers.Int64Value {
	if m != nil {
		return m.CriterionId
	}
	return nil
}

func (m *AdGroupBidModifier) GetBidModifier() *wrappers.DoubleValue {
	if m != nil {
		return m.BidModifier
	}
	return nil
}

type isAdGroupBidModifier_Criterion interface {
	isAdGroupBidModifier_Criterion()
}

type AdGroupBidModifier_HotelDateSelectionType struct {
	HotelDateSelectionType *common.HotelDateSelectionTypeInfo `protobuf:"bytes,5,opt,name=hotel_date_selection_type,json=hotelDateSelectionType,proto3,oneof"`
}

type AdGroupBidModifier_HotelAdvanceBookingWindow struct {
	HotelAdvanceBookingWindow *common.HotelAdvanceBookingWindowInfo `protobuf:"bytes,6,opt,name=hotel_advance_booking_window,json=hotelAdvanceBookingWindow,proto3,oneof"`
}

type AdGroupBidModifier_HotelLengthOfStay struct {
	HotelLengthOfStay *common.HotelLengthOfStayInfo `protobuf:"bytes,7,opt,name=hotel_length_of_stay,json=hotelLengthOfStay,proto3,oneof"`
}

type AdGroupBidModifier_HotelCheckInDay struct {
	HotelCheckInDay *common.HotelCheckInDayInfo `protobuf:"bytes,8,opt,name=hotel_check_in_day,json=hotelCheckInDay,proto3,oneof"`
}

func (*AdGroupBidModifier_HotelDateSelectionType) isAdGroupBidModifier_Criterion() {}

func (*AdGroupBidModifier_HotelAdvanceBookingWindow) isAdGroupBidModifier_Criterion() {}

func (*AdGroupBidModifier_HotelLengthOfStay) isAdGroupBidModifier_Criterion() {}

func (*AdGroupBidModifier_HotelCheckInDay) isAdGroupBidModifier_Criterion() {}

func (m *AdGroupBidModifier) GetCriterion() isAdGroupBidModifier_Criterion {
	if m != nil {
		return m.Criterion
	}
	return nil
}

func (m *AdGroupBidModifier) GetHotelDateSelectionType() *common.HotelDateSelectionTypeInfo {
	if x, ok := m.GetCriterion().(*AdGroupBidModifier_HotelDateSelectionType); ok {
		return x.HotelDateSelectionType
	}
	return nil
}

func (m *AdGroupBidModifier) GetHotelAdvanceBookingWindow() *common.HotelAdvanceBookingWindowInfo {
	if x, ok := m.GetCriterion().(*AdGroupBidModifier_HotelAdvanceBookingWindow); ok {
		return x.HotelAdvanceBookingWindow
	}
	return nil
}

func (m *AdGroupBidModifier) GetHotelLengthOfStay() *common.HotelLengthOfStayInfo {
	if x, ok := m.GetCriterion().(*AdGroupBidModifier_HotelLengthOfStay); ok {
		return x.HotelLengthOfStay
	}
	return nil
}

func (m *AdGroupBidModifier) GetHotelCheckInDay() *common.HotelCheckInDayInfo {
	if x, ok := m.GetCriterion().(*AdGroupBidModifier_HotelCheckInDay); ok {
		return x.HotelCheckInDay
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*AdGroupBidModifier) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _AdGroupBidModifier_OneofMarshaler, _AdGroupBidModifier_OneofUnmarshaler, _AdGroupBidModifier_OneofSizer, []interface{}{
		(*AdGroupBidModifier_HotelDateSelectionType)(nil),
		(*AdGroupBidModifier_HotelAdvanceBookingWindow)(nil),
		(*AdGroupBidModifier_HotelLengthOfStay)(nil),
		(*AdGroupBidModifier_HotelCheckInDay)(nil),
	}
}

func _AdGroupBidModifier_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*AdGroupBidModifier)
	// criterion
	switch x := m.Criterion.(type) {
	case *AdGroupBidModifier_HotelDateSelectionType:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.HotelDateSelectionType); err != nil {
			return err
		}
	case *AdGroupBidModifier_HotelAdvanceBookingWindow:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.HotelAdvanceBookingWindow); err != nil {
			return err
		}
	case *AdGroupBidModifier_HotelLengthOfStay:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.HotelLengthOfStay); err != nil {
			return err
		}
	case *AdGroupBidModifier_HotelCheckInDay:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.HotelCheckInDay); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("AdGroupBidModifier.Criterion has unexpected type %T", x)
	}
	return nil
}

func _AdGroupBidModifier_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*AdGroupBidModifier)
	switch tag {
	case 5: // criterion.hotel_date_selection_type
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(common.HotelDateSelectionTypeInfo)
		err := b.DecodeMessage(msg)
		m.Criterion = &AdGroupBidModifier_HotelDateSelectionType{msg}
		return true, err
	case 6: // criterion.hotel_advance_booking_window
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(common.HotelAdvanceBookingWindowInfo)
		err := b.DecodeMessage(msg)
		m.Criterion = &AdGroupBidModifier_HotelAdvanceBookingWindow{msg}
		return true, err
	case 7: // criterion.hotel_length_of_stay
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(common.HotelLengthOfStayInfo)
		err := b.DecodeMessage(msg)
		m.Criterion = &AdGroupBidModifier_HotelLengthOfStay{msg}
		return true, err
	case 8: // criterion.hotel_check_in_day
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(common.HotelCheckInDayInfo)
		err := b.DecodeMessage(msg)
		m.Criterion = &AdGroupBidModifier_HotelCheckInDay{msg}
		return true, err
	default:
		return false, nil
	}
}

func _AdGroupBidModifier_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*AdGroupBidModifier)
	// criterion
	switch x := m.Criterion.(type) {
	case *AdGroupBidModifier_HotelDateSelectionType:
		s := proto.Size(x.HotelDateSelectionType)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *AdGroupBidModifier_HotelAdvanceBookingWindow:
		s := proto.Size(x.HotelAdvanceBookingWindow)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *AdGroupBidModifier_HotelLengthOfStay:
		s := proto.Size(x.HotelLengthOfStay)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *AdGroupBidModifier_HotelCheckInDay:
		s := proto.Size(x.HotelCheckInDay)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*AdGroupBidModifier)(nil), "google.ads.googleads.v0.resources.AdGroupBidModifier")
}

func init() {
	proto.RegisterFile("github.com/kritzware/google-ads-go/protos/google/ads/googleads/v0/resources/ad_group_bid_modifier.proto", fileDescriptor_69f729284505e90f)
}

var fileDescriptor_69f729284505e90f = []byte{
	// 515 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x93, 0xdd, 0x6e, 0xd3, 0x30,
	0x14, 0xc7, 0x49, 0xc7, 0xbe, 0xdc, 0x22, 0x44, 0x84, 0x20, 0x8c, 0x09, 0x6d, 0x20, 0xa4, 0xdd,
	0xe0, 0x54, 0x8c, 0x0f, 0x09, 0x69, 0xa0, 0x94, 0x4a, 0x5d, 0x25, 0x3e, 0xa6, 0x16, 0x95, 0x9b,
	0x4a, 0x96, 0x13, 0x9f, 0x26, 0xd6, 0x12, 0x3b, 0x72, 0xdc, 0x56, 0xb9, 0xe3, 0x59, 0xb8, 0xe4,
	0x9a, 0xa7, 0xd8, 0x63, 0xf0, 0x24, 0x28, 0x71, 0x12, 0x0d, 0xb6, 0x6a, 0xbd, 0x3b, 0xb5, 0xcf,
	0xff, 0xff, 0xfb, 0x1f, 0xf7, 0x04, 0x9d, 0x84, 0x52, 0x86, 0x31, 0xb8, 0x94, 0x65, 0xae, 0x29,
	0x8b, 0x6a, 0xd1, 0x75, 0x15, 0x64, 0x72, 0xae, 0x02, 0xc8, 0x5c, 0xca, 0x48, 0xa8, 0xe4, 0x3c,
	0x25, 0x3e, 0x67, 0x24, 0x91, 0x8c, 0xcf, 0x38, 0x28, 0x9c, 0x2a, 0xa9, 0xa5, 0x7d, 0x68, 0x34,
	0x98, 0xb2, 0x0c, 0x37, 0x72, 0xbc, 0xe8, 0xe2, 0x46, 0xbe, 0xf7, 0x62, 0x15, 0x21, 0x90, 0x49,
	0x22, 0x85, 0x1b, 0x28, 0xae, 0x41, 0x71, 0x6a, 0x1c, 0xf7, 0x9e, 0x54, 0xed, 0xe5, 0x2f, 0x7f,
	0x3e, 0x73, 0x97, 0x8a, 0xa6, 0x29, 0xa8, 0xcc, 0xdc, 0x3f, 0xbd, 0xd8, 0x44, 0xb6, 0xc7, 0x06,
	0x45, 0xa0, 0x1e, 0x67, 0x9f, 0xab, 0x38, 0xf6, 0x33, 0x74, 0xa7, 0x46, 0x12, 0x41, 0x13, 0x70,
	0xac, 0x03, 0xeb, 0x68, 0x77, 0xd4, 0xa9, 0x0f, 0xbf, 0xd0, 0x04, 0xec, 0xb7, 0x68, 0xa7, 0x1e,
	0xc6, 0x69, 0x1d, 0x58, 0x47, 0xed, 0x97, 0xfb, 0x55, 0x6a, 0x5c, 0xe3, 0xf0, 0x58, 0x2b, 0x2e,
	0xc2, 0x09, 0x8d, 0xe7, 0x30, 0xda, 0xa6, 0x06, 0x64, 0xbf, 0x47, 0x9d, 0x2a, 0xa6, 0x14, 0x84,
	0x33, 0x67, 0xa3, 0x14, 0x3f, 0xbe, 0x22, 0x1e, 0x0a, 0xfd, 0xe6, 0x95, 0xd1, 0xb6, 0x1b, 0xc1,
	0x90, 0xd9, 0x1f, 0x50, 0xe7, 0xf2, 0xe3, 0x39, 0xb7, 0x57, 0xc0, 0xfb, 0x72, 0xee, 0xc7, 0x50,
	0x19, 0xf8, 0x97, 0xc6, 0x5b, 0xa2, 0x47, 0x91, 0xd4, 0x10, 0x13, 0x46, 0x35, 0x90, 0x0c, 0x62,
	0x08, 0x74, 0x91, 0x45, 0xe7, 0x29, 0x38, 0x9b, 0xa5, 0xdb, 0x3b, 0xbc, 0xea, 0xbf, 0x30, 0x0f,
	0x8d, 0x4f, 0x0b, 0x83, 0x3e, 0xd5, 0x30, 0xae, 0xe5, 0xdf, 0xf2, 0x14, 0x86, 0x62, 0x26, 0x4f,
	0x6f, 0x8d, 0x1e, 0x44, 0xd7, 0xde, 0xda, 0x3f, 0x2c, 0xb4, 0x6f, 0xc8, 0x94, 0x2d, 0xa8, 0x08,
	0x80, 0xf8, 0x52, 0x9e, 0x73, 0x11, 0x92, 0x25, 0x17, 0x4c, 0x2e, 0x9d, 0xad, 0x12, 0x7e, 0xb2,
	0x16, 0xdc, 0x33, 0x16, 0x3d, 0xe3, 0xf0, 0xbd, 0x34, 0xa8, 0xf8, 0x66, 0xbc, 0xeb, 0x1a, 0xec,
	0x08, 0xdd, 0x37, 0x09, 0x62, 0x10, 0xa1, 0x8e, 0x88, 0x9c, 0x91, 0x4c, 0xd3, 0xdc, 0xd9, 0x2e,
	0xc9, 0xaf, 0xd7, 0x22, 0x7f, 0x2a, 0xa5, 0x5f, 0x67, 0x63, 0x4d, 0xf3, 0x8a, 0x78, 0x2f, 0xfa,
	0xff, 0xc2, 0xf6, 0x91, 0x6d, 0x48, 0x41, 0x04, 0xc1, 0x39, 0xe1, 0x82, 0x30, 0x9a, 0x3b, 0x3b,
	0x25, 0xe7, 0x78, 0x2d, 0xce, 0xc7, 0x42, 0x38, 0x14, 0xfd, 0x86, 0x72, 0x37, 0xfa, 0xf7, 0xb8,
	0xd7, 0x46, 0xbb, 0xcd, 0x66, 0xf4, 0x7e, 0x5b, 0xe8, 0x79, 0x20, 0x13, 0x7c, 0xe3, 0x57, 0xd4,
	0x7b, 0x78, 0x75, 0xe7, 0xcf, 0x8a, 0xad, 0x39, 0xb3, 0x7e, 0xb6, 0x36, 0x06, 0x9e, 0xf7, 0xab,
	0x75, 0x38, 0x30, 0x26, 0x1e, 0xcb, 0xb0, 0x29, 0x8b, 0x6a, 0xd2, 0xc5, 0xa3, 0xda, 0xe4, 0xa2,
	0xee, 0x99, 0x7a, 0x2c, 0x9b, 0x36, 0x3d, 0xd3, 0x49, 0x77, 0xda, 0xf4, 0xfc, 0x59, 0xa3, 0xc7,
	0xdf, 0x2a, 0x17, 0xf6, 0xf8, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xb9, 0xee, 0xed, 0xa9, 0x3d,
	0x04, 0x00, 0x00,
}
